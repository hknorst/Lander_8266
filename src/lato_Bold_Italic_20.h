#ifndef Lato_BoldItalic10pt7b_H
#define Lato_BoldItalic10pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t Lato_BoldItalic10pt7bBitmaps[] PROGMEM = {
  0x00, 0x76, 0x66, 0x66, 0x66, 0x64, 0x00, 0xCE, 0xC0, 0xCF, 0x3C, 0xF6,
  0xDA, 0x20, 0x06, 0x60, 0x66, 0x0C, 0xC0, 0xCC, 0x3F, 0xF7, 0xFE, 0x19,
  0x81, 0x98, 0x19, 0x8F, 0xFE, 0xFF, 0xC3, 0x30, 0x33, 0x06, 0x60, 0x66,
  0x00, 0x00, 0x80, 0x30, 0x06, 0x03, 0xE1, 0xFE, 0x32, 0xCC, 0xC1, 0x98,
  0x3A, 0x07, 0xC0, 0x3F, 0x03, 0xE0, 0x6E, 0x09, 0xC1, 0x3B, 0x2E, 0xFF,
  0x87, 0xE0, 0x20, 0x04, 0x00, 0x80, 0x38, 0x1D, 0xF0, 0xEC, 0x63, 0x31,
  0x98, 0xCC, 0xC1, 0xF6, 0x07, 0xB8, 0x00, 0xDC, 0x06, 0xF8, 0x36, 0x61,
  0x99, 0x8E, 0x66, 0x31, 0x99, 0x87, 0xCC, 0x0E, 0x00, 0x07, 0x80, 0x7E,
  0x07, 0x38, 0x30, 0x81, 0x80, 0x0E, 0x00, 0x30, 0x07, 0xC6, 0x77, 0x33,
  0x1F, 0x38, 0xF9, 0xC3, 0x86, 0x1E, 0x3F, 0xF8, 0xF9, 0xE0, 0xFF, 0xE0,
  0x10, 0xC6, 0x63, 0x31, 0x8C, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC3, 0x18,
  0xC0, 0x21, 0x8C, 0x61, 0x8C, 0x63, 0x18, 0xC6, 0x33, 0x98, 0xC6, 0x63,
  0x31, 0x80, 0x10, 0xA9, 0xF9, 0xC7, 0xD2, 0x8C, 0x00, 0x06, 0x03, 0x00,
  0xC0, 0x30, 0xFF, 0xFF, 0xF0, 0xC0, 0x30, 0x0C, 0x02, 0x01, 0x80, 0x7D,
  0x94, 0x80, 0xFF, 0xC0, 0x7D, 0x80, 0x01, 0x80, 0xC0, 0xC0, 0x60, 0x20,
  0x30, 0x18, 0x18, 0x0C, 0x0C, 0x06, 0x06, 0x03, 0x03, 0x01, 0x80, 0xC0,
  0x80, 0x00, 0x0F, 0x0F, 0xE7, 0x1D, 0x83, 0xE0, 0xF8, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x1F, 0x86, 0xE3, 0x9F, 0xC3, 0xC0, 0x06, 0x1E, 0x3E,
  0x7E, 0xEE, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1C, 0x1C, 0xFF, 0xFF,
  0x07, 0x83, 0xF8, 0xE3, 0x98, 0x31, 0x06, 0x01, 0xC0, 0x30, 0x0E, 0x03,
  0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xFF, 0xBF, 0xF0, 0x0F, 0x8F, 0xF3,
  0x0D, 0xC3, 0x00, 0xC0, 0x70, 0xF0, 0x3E, 0x01, 0xC0, 0x78, 0x1F, 0x07,
  0xE3, 0x9F, 0xC3, 0xE0, 0x00, 0xE0, 0x38, 0x0F, 0x03, 0xE0, 0xEC, 0x19,
  0x86, 0x31, 0x86, 0x61, 0xDF, 0xFF, 0xFF, 0x80, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0F, 0xE1, 0xFC, 0x60, 0x0C, 0x01, 0x80, 0x7E, 0x0F, 0xF0, 0x0E,
  0x00, 0xC0, 0x18, 0x03, 0x00, 0xE6, 0x19, 0xFE, 0x0F, 0x80, 0x03, 0xC1,
  0xC0, 0x60, 0x30, 0x18, 0x0F, 0xC7, 0xF9, 0xC7, 0xE1, 0xF0, 0x3C, 0x1F,
  0x06, 0xE3, 0x9F, 0xC3, 0xE0, 0xFF, 0xFF, 0xF0, 0x18, 0x0E, 0x03, 0x01,
  0xC0, 0x60, 0x38, 0x1C, 0x06, 0x03, 0x80, 0xC0, 0x70, 0x38, 0x0C, 0x00,
  0x0F, 0x0F, 0xE7, 0x1D, 0x83, 0x60, 0xDC, 0x63, 0xF1, 0xFE, 0xE1, 0xB0,
  0x7C, 0x1F, 0x07, 0xE3, 0xBF, 0xC3, 0xE0, 0x1F, 0x0F, 0xE6, 0x1B, 0x87,
  0xC1, 0xF0, 0x7E, 0x39, 0xFE, 0x3B, 0x01, 0x80, 0xE0, 0x70, 0x38, 0x1C,
  0x0E, 0x00, 0x37, 0x30, 0x00, 0x00, 0x6E, 0x60, 0x37, 0x30, 0x00, 0x00,
  0x6E, 0x62, 0x4C, 0x00, 0x81, 0xC3, 0xC7, 0x87, 0x07, 0xC0, 0xF0, 0x1E,
  0x03, 0x00, 0x80, 0x7F, 0xDF, 0xF0, 0x00, 0x00, 0xFF, 0xBF, 0xE0, 0x40,
  0x38, 0x1F, 0x03, 0xC0, 0x78, 0x78, 0xF0, 0xF0, 0xE0, 0x40, 0x00, 0x3D,
  0xFD, 0x18, 0x30, 0x61, 0x86, 0x18, 0x30, 0x40, 0x00, 0x06, 0x0E, 0x18,
  0x00, 0x07, 0xC0, 0x7F, 0xC3, 0x83, 0x8C, 0x06, 0x63, 0xCB, 0x1F, 0xBC,
  0xCC, 0xF3, 0x33, 0x98, 0x8A, 0x66, 0x69, 0x99, 0xB7, 0xBC, 0xCC, 0xE3,
  0x80, 0x07, 0x02, 0x0F, 0xFC, 0x0F, 0x80, 0x01, 0xC0, 0x0E, 0x00, 0xF0,
  0x07, 0xC0, 0x66, 0x03, 0x30, 0x39, 0x81, 0x8E, 0x1C, 0x70, 0xFF, 0x8F,
  0xFC, 0x60, 0x77, 0x03, 0xB8, 0x1F, 0x80, 0x60, 0x7F, 0x8F, 0xF9, 0xC3,
  0xB8, 0x76, 0x0C, 0xC3, 0x9F, 0xE3, 0xFC, 0xE1, 0xDC, 0x1B, 0x83, 0x70,
  0xEE, 0x1D, 0xFF, 0x3F, 0x80, 0x07, 0xC1, 0xFE, 0x38, 0x77, 0x00, 0x60,
  0x0E, 0x00, 0xE0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xE0, 0x0E, 0x00, 0x70,
  0xC3, 0xFC, 0x1F, 0x00, 0x7F, 0x83, 0xFF, 0x1C, 0x38, 0xE0, 0xE7, 0x03,
  0x30, 0x19, 0x80, 0xEC, 0x07, 0xE0, 0x37, 0x03, 0xB8, 0x1D, 0xC1, 0xCE,
  0x1C, 0x7F, 0xC3, 0xFC, 0x00, 0x7F, 0xDF, 0xF7, 0x01, 0xC0, 0x70, 0x18,
  0x07, 0xF1, 0xFC, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x3F, 0xCF, 0xF0,
  0x7F, 0xDF, 0xF7, 0x01, 0xC0, 0x70, 0x18, 0x06, 0x01, 0xFC, 0xFF, 0x38,
  0x0E, 0x03, 0x80, 0xE0, 0x30, 0x0C, 0x00, 0x07, 0xC1, 0xFF, 0x38, 0x37,
  0x00, 0x60, 0x0E, 0x00, 0xE0, 0x0C, 0x1F, 0xC1, 0xEC, 0x06, 0xE0, 0x6E,
  0x06, 0x70, 0xE3, 0xFE, 0x1F, 0x80, 0x70, 0x3B, 0x81, 0xDC, 0x0C, 0xE0,
  0x67, 0x03, 0x30, 0x39, 0xFF, 0xCF, 0xFE, 0xE0, 0x77, 0x03, 0xB8, 0x1D,
  0xC0, 0xCE, 0x06, 0x60, 0x33, 0x03, 0x80, 0x33, 0x77, 0x77, 0x76, 0x66,
  0x6E, 0xEE, 0xE0, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x0E, 0x0E,
  0x0E, 0x0E, 0x0C, 0x1C, 0xF8, 0xF0, 0x70, 0x7B, 0x87, 0x1C, 0x30, 0xE3,
  0x87, 0x38, 0x33, 0x81, 0xF8, 0x0F, 0xC0, 0x67, 0x07, 0x38, 0x38, 0xE1,
  0xC7, 0x0E, 0x1C, 0x70, 0xE3, 0x03, 0x80, 0x70, 0x70, 0x70, 0x70, 0x70,
  0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0x70, 0x07,
  0x78, 0x07, 0x78, 0x0F, 0x78, 0x1F, 0x7C, 0x1E, 0x6C, 0x3E, 0x6C, 0x36,
  0x6E, 0x66, 0xE6, 0xE6, 0xE6, 0xC6, 0xE7, 0xC6, 0xC3, 0x8E, 0xC3, 0x0E,
  0xC0, 0x0C, 0xC0, 0x0C, 0x70, 0x3B, 0x81, 0xDE, 0x0C, 0xF0, 0x67, 0xC3,
  0x36, 0x19, 0xB8, 0xCC, 0xC6, 0xE7, 0x37, 0x1F, 0xB8, 0x7D, 0x83, 0xCC,
  0x0E, 0x60, 0x73, 0x01, 0x80, 0x07, 0xC0, 0xFF, 0x8E, 0x1C, 0xE0, 0x76,
  0x01, 0xF0, 0x0F, 0x80, 0x78, 0x03, 0xC0, 0x1E, 0x01, 0xF8, 0x0F, 0xC0,
  0xE7, 0x0E, 0x1F, 0xE0, 0x7C, 0x00, 0x7F, 0x8F, 0xF9, 0xC7, 0x38, 0x77,
  0x0E, 0xE1, 0xD8, 0x33, 0x0E, 0x7F, 0x9F, 0xC3, 0x80, 0x70, 0x0E, 0x01,
  0xC0, 0x30, 0x00, 0x07, 0xC0, 0xFF, 0x0E, 0x1C, 0xE0, 0x76, 0x01, 0xF0,
  0x0F, 0x80, 0x78, 0x03, 0xC0, 0x1E, 0x01, 0xF8, 0x0F, 0xC0, 0xE7, 0x0E,
  0x1F, 0xE0, 0x7F, 0x00, 0x1C, 0x00, 0x70, 0x03, 0xC0, 0x7F, 0x1F, 0xF7,
  0x1D, 0xC3, 0x70, 0xD8, 0x76, 0x1D, 0xFE, 0x7E, 0x39, 0xCE, 0x73, 0x8E,
  0xE3, 0xB8, 0x7C, 0x1C, 0x0F, 0x87, 0xF3, 0x88, 0xC0, 0x70, 0x0E, 0x03,
  0xE0, 0x7E, 0x0F, 0x80, 0xE0, 0x18, 0x06, 0xE3, 0xBF, 0xC3, 0xC0, 0xFF,
  0xFF, 0xFC, 0x38, 0x07, 0x00, 0xC0, 0x18, 0x03, 0x00, 0xE0, 0x1C, 0x03,
  0x80, 0x70, 0x0E, 0x01, 0x80, 0x30, 0x06, 0x00, 0x70, 0x37, 0x03, 0x70,
  0x36, 0x07, 0x60, 0x76, 0x07, 0x60, 0x7E, 0x07, 0xE0, 0x6E, 0x06, 0xE0,
  0xEE, 0x0E, 0x71, 0xC7, 0xF8, 0x1F, 0x00, 0xE0, 0x3B, 0x01, 0xD8, 0x1C,
  0xE0, 0xE7, 0x06, 0x18, 0x70, 0xC3, 0x07, 0x38, 0x39, 0x81, 0xDC, 0x06,
  0xC0, 0x36, 0x01, 0xE0, 0x0F, 0x00, 0x30, 0x00, 0xE0, 0x60, 0xEC, 0x1C,
  0x1D, 0x83, 0x83, 0x38, 0xF0, 0xE7, 0x1F, 0x1C, 0xE3, 0x63, 0x1C, 0xCC,
  0xE3, 0x99, 0x98, 0x33, 0x37, 0x06, 0xC6, 0xE0, 0xD8, 0xD8, 0x1E, 0x0F,
  0x03, 0xC1, 0xC0, 0x78, 0x38, 0x06, 0x07, 0x00, 0x1C, 0x1C, 0x70, 0xE0,
  0xC3, 0x83, 0x9C, 0x06, 0xE0, 0x1F, 0x00, 0x3C, 0x00, 0xF0, 0x07, 0xC0,
  0x3B, 0x81, 0xCE, 0x07, 0x18, 0x38, 0x71, 0xC0, 0xCF, 0x03, 0x80, 0xE0,
  0x77, 0x06, 0x70, 0xE3, 0x0C, 0x39, 0x83, 0xB8, 0x1B, 0x01, 0xF0, 0x0E,
  0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x1C, 0x01, 0xC0, 0x1C, 0x00, 0x3F, 0xF3,
  0xFF, 0x00, 0xE0, 0x1C, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x0E, 0x01,
  0xC0, 0x38, 0x03, 0x80, 0x70, 0x0F, 0xFC, 0xFF, 0xC0, 0x3C, 0xF3, 0x0C,
  0x30, 0xC3, 0x18, 0x61, 0x86, 0x18, 0x61, 0x86, 0x18, 0xC3, 0x0F, 0x3C,
  0xC3, 0x06, 0x18, 0x61, 0x86, 0x0C, 0x30, 0xC3, 0x04, 0x18, 0x61, 0x86,
  0x04, 0x3C, 0xF0, 0xC6, 0x18, 0x61, 0x86, 0x18, 0x61, 0x84, 0x30, 0xC3,
  0x0C, 0x30, 0xCF, 0x3C, 0x18, 0x0E, 0x0F, 0x06, 0xC6, 0x63, 0x1B, 0x0E,
  0xFF, 0xFC, 0xE7, 0x30, 0x07, 0xC7, 0xF3, 0x9D, 0xC6, 0x61, 0x98, 0x6E,
  0x3B, 0x8E, 0x67, 0x9F, 0x63, 0xB8, 0x70, 0x38, 0x1C, 0x0C, 0x06, 0x03,
  0x39, 0xBE, 0xE3, 0xF1, 0xF0, 0xF8, 0x7C, 0x7C, 0x3E, 0x3B, 0xF9, 0xB8,
  0x0F, 0x1F, 0xCC, 0x4E, 0x06, 0x03, 0x03, 0x80, 0xC0, 0x73, 0x3F, 0x8F,
  0x80, 0x00, 0xE0, 0x1C, 0x03, 0x00, 0x60, 0x0C, 0x1D, 0x8F, 0xF1, 0xCE,
  0x71, 0xCC, 0x39, 0x87, 0x70, 0xCE, 0x38, 0xCF, 0x1F, 0x61, 0xCC, 0x0F,
  0x1F, 0xCC, 0x6E, 0x36, 0x7B, 0xF3, 0x80, 0xC0, 0x71, 0xBF, 0x8F, 0x80,
  0x1E, 0x79, 0xC3, 0x8F, 0xDF, 0x98, 0x30, 0x61, 0xC3, 0x87, 0x0E, 0x18,
  0x30, 0x60, 0xC0, 0x0F, 0xE3, 0xFC, 0xE7, 0x18, 0xE3, 0x18, 0x63, 0x0F,
  0xE0, 0xF8, 0x03, 0x07, 0xF1, 0xFE, 0x70, 0xCE, 0x18, 0xFE, 0x0F, 0x80,
  0x70, 0x38, 0x1C, 0x0C, 0x06, 0x03, 0x39, 0xFE, 0xE7, 0xF1, 0xF1, 0xF8,
  0xFC, 0x7C, 0x3E, 0x1F, 0x0D, 0x86, 0x77, 0x70, 0x06, 0x66, 0x6E, 0xEE,
  0xEC, 0xCC, 0x0E, 0x1C, 0x38, 0x00, 0x01, 0x83, 0x06, 0x0C, 0x38, 0x70,
  0xE1, 0xC3, 0x06, 0x0C, 0x18, 0x71, 0xC7, 0x00, 0x70, 0x1C, 0x07, 0x01,
  0x80, 0x60, 0x18, 0xF6, 0x31, 0x98, 0xEE, 0x3F, 0x0F, 0xC3, 0xB0, 0xCE,
  0x31, 0x8C, 0x73, 0x0C, 0x77, 0x76, 0x66, 0x66, 0xEE, 0xEE, 0xCC, 0xCC,
  0x6E, 0x39, 0xFD, 0xFF, 0x3D, 0xF8, 0xE3, 0xE3, 0x1F, 0x8C, 0x7C, 0x31,
  0xF0, 0xC7, 0xC7, 0x1B, 0x1C, 0x6C, 0x71, 0x80, 0x67, 0x3F, 0xFC, 0xFC,
  0x7E, 0x3F, 0x1F, 0x0F, 0x87, 0xC3, 0x61, 0xB0, 0xC0, 0x0F, 0x0F, 0xE3,
  0x19, 0xC7, 0x61, 0xF8, 0x7E, 0x1D, 0x86, 0x63, 0x9F, 0xC3, 0xC0, 0x33,
  0x8D, 0xF7, 0x9D, 0xE3, 0x70, 0xDC, 0x36, 0x1D, 0x87, 0x63, 0x9F, 0xC6,
  0xE3, 0x80, 0xE0, 0x38, 0x0E, 0x00, 0x07, 0xC7, 0xF3, 0x9D, 0xC6, 0x61,
  0x98, 0x6E, 0x3B, 0x8E, 0x67, 0x9F, 0xE3, 0xB8, 0x0E, 0x03, 0x00, 0xC0,
  0x30, 0x6E, 0xFB, 0xC7, 0x0E, 0x1C, 0x30, 0x60, 0xC1, 0x83, 0x00, 0x1E,
  0x3F, 0x62, 0x60, 0x78, 0x3C, 0x0E, 0x06, 0x46, 0xFC, 0x78, 0x10, 0xC3,
  0x0C, 0xFF, 0xF7, 0x18, 0x61, 0x86, 0x18, 0xE1, 0xE7, 0x80, 0x61, 0xF0,
  0xF8, 0x7C, 0x7E, 0x3E, 0x1F, 0x0F, 0x8E, 0xCF, 0x7D, 0x9C, 0xC0, 0xC1,
  0xE1, 0xF8, 0xCC, 0x66, 0x63, 0x31, 0xB0, 0xF8, 0x38, 0x1C, 0x0E, 0x00,
  0xC3, 0x0F, 0x1C, 0x7C, 0x71, 0xB9, 0xE6, 0xED, 0xB1, 0xB6, 0xC6, 0x9B,
  0x1E, 0x78, 0x79, 0xE1, 0xC3, 0x87, 0x0C, 0x00, 0x38, 0xE3, 0x18, 0x76,
  0x07, 0xC0, 0xF0, 0x1E, 0x03, 0xC0, 0xFC, 0x3B, 0x8E, 0x3B, 0x87, 0x00,
  0xC1, 0xF1, 0xF8, 0xCC, 0x66, 0x63, 0x31, 0xF0, 0x78, 0x38, 0x1C, 0x0E,
  0x06, 0x07, 0x03, 0x03, 0x80, 0x7F, 0xBF, 0xC1, 0xC0, 0xC0, 0xE0, 0xE0,
  0xE0, 0x60, 0x70, 0x7F, 0xBF, 0xC0, 0x0C, 0x73, 0x0C, 0x30, 0xC3, 0x0C,
  0x73, 0x8E, 0x18, 0x61, 0x86, 0x18, 0xC3, 0x87, 0x1C, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0x30, 0xE1, 0x87, 0x18, 0x61, 0x86, 0x18, 0x71, 0x8C, 0x30,
  0xC3, 0x0C, 0x31, 0xCE, 0x30, 0x00, 0xCE, 0x37, 0xFF, 0x9E, 0xC0, 0x00 };

const GFXglyph Lato_BoldItalic10pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   4,    0,    0 },   // 0x20 ' '
  {     1,   4,  15,   7,    2,  -14 },   // 0x21 '!'
  {     9,   6,   6,   8,    2,  -14 },   // 0x22 '"'
  {    14,  12,  15,  12,    0,  -14 },   // 0x23 '#'
  {    37,  11,  21,  12,    0,  -17 },   // 0x24 '$'
  {    66,  14,  15,  15,    1,  -14 },   // 0x25 '%'
  {    93,  13,  15,  13,    0,  -14 },   // 0x26 '&'
  {   118,   2,   6,   4,    2,  -14 },   // 0x27 '''
  {   120,   5,  20,   6,    1,  -16 },   // 0x28 '('
  {   133,   5,  20,   6,    0,  -16 },   // 0x29 ')'
  {   146,   7,   7,   7,    1,  -15 },   // 0x2A '*'
  {   153,  10,  11,  12,    1,  -11 },   // 0x2B '+'
  {   167,   3,   6,   5,    0,   -2 },   // 0x2C ','
  {   170,   5,   2,   7,    1,   -6 },   // 0x2D '-'
  {   172,   3,   3,   5,    0,   -2 },   // 0x2E '.'
  {   174,   9,  17,   7,   -1,  -14 },   // 0x2F '/'
  {   194,  10,  15,  12,    1,  -14 },   // 0x30 '0'
  {   213,   8,  15,  12,    2,  -14 },   // 0x31 '1'
  {   228,  11,  15,  12,    0,  -14 },   // 0x32 '2'
  {   249,  10,  15,  12,    1,  -14 },   // 0x33 '3'
  {   268,  11,  15,  12,    0,  -14 },   // 0x34 '4'
  {   289,  11,  15,  12,    0,  -14 },   // 0x35 '5'
  {   310,  10,  15,  12,    1,  -14 },   // 0x36 '6'
  {   329,  10,  15,  12,    2,  -14 },   // 0x37 '7'
  {   348,  10,  15,  12,    1,  -14 },   // 0x38 '8'
  {   367,  10,  15,  12,    2,  -14 },   // 0x39 '9'
  {   386,   4,  11,   5,    0,  -10 },   // 0x3A ':'
  {   392,   4,  14,   5,    0,  -10 },   // 0x3B ';'
  {   399,   9,  10,  11,    1,  -11 },   // 0x3C '<'
  {   411,  10,   6,  12,    1,   -9 },   // 0x3D '='
  {   419,   9,  10,  11,    1,  -11 },   // 0x3E '>'
  {   431,   7,  15,   8,    1,  -14 },   // 0x3F '?'
  {   445,  14,  17,  15,    1,  -13 },   // 0x40 '@'
  {   475,  13,  15,  13,   -1,  -14 },   // 0x41 'A'
  {   500,  11,  15,  12,    1,  -14 },   // 0x42 'B'
  {   521,  12,  15,  12,    1,  -14 },   // 0x43 'C'
  {   544,  13,  15,  14,    1,  -14 },   // 0x44 'D'
  {   569,  10,  15,  11,    1,  -14 },   // 0x45 'E'
  {   588,  10,  15,  10,    1,  -14 },   // 0x46 'F'
  {   607,  12,  15,  13,    1,  -14 },   // 0x47 'G'
  {   630,  13,  15,  14,    1,  -14 },   // 0x48 'H'
  {   655,   4,  15,   6,    1,  -14 },   // 0x49 'I'
  {   663,   8,  15,   8,    0,  -14 },   // 0x4A 'J'
  {   678,  13,  15,  13,    1,  -14 },   // 0x4B 'K'
  {   703,   8,  15,  10,    1,  -14 },   // 0x4C 'L'
  {   718,  16,  15,  17,    1,  -14 },   // 0x4D 'M'
  {   748,  13,  15,  14,    1,  -14 },   // 0x4E 'N'
  {   773,  13,  15,  15,    1,  -14 },   // 0x4F 'O'
  {   798,  11,  15,  12,    1,  -14 },   // 0x50 'P'
  {   819,  13,  18,  15,    1,  -14 },   // 0x51 'Q'
  {   849,  10,  15,  12,    1,  -14 },   // 0x52 'R'
  {   868,  10,  15,  10,    0,  -14 },   // 0x53 'S'
  {   887,  11,  15,  11,    1,  -14 },   // 0x54 'T'
  {   908,  12,  15,  13,    1,  -14 },   // 0x55 'U'
  {   931,  13,  15,  13,    1,  -14 },   // 0x56 'V'
  {   956,  19,  15,  19,    1,  -14 },   // 0x57 'W'
  {   992,  14,  15,  13,   -1,  -14 },   // 0x58 'X'
  {  1019,  12,  15,  12,    1,  -14 },   // 0x59 'Y'
  {  1042,  12,  15,  11,    0,  -14 },   // 0x5A 'Z'
  {  1065,   6,  20,   6,    0,  -15 },   // 0x5B '['
  {  1080,   6,  17,   7,    1,  -14 },   // 0x5C '\'
  {  1093,   6,  20,   6,    0,  -15 },   // 0x5D ']'
  {  1108,   9,   7,  12,    2,  -14 },   // 0x5E '^'
  {  1116,   7,   2,   7,   -1,    3 },   // 0x5F '_'
  {  1118,   4,   3,   6,    0,  -14 },   // 0x60 '`'
  {  1120,  10,  11,  10,    0,  -10 },   // 0x61 'a'
  {  1134,   9,  16,  11,    1,  -15 },   // 0x62 'b'
  {  1152,   9,  11,   9,    0,  -10 },   // 0x63 'c'
  {  1165,  11,  16,  11,    0,  -15 },   // 0x64 'd'
  {  1187,   9,  11,   9,    0,  -10 },   // 0x65 'e'
  {  1200,   7,  17,   6,    1,  -14 },   // 0x66 'f'
  {  1215,  11,  15,  10,   -1,  -10 },   // 0x67 'g'
  {  1236,   9,  16,  11,    1,  -15 },   // 0x68 'h'
  {  1254,   4,  16,   5,    1,  -15 },   // 0x69 'i'
  {  1262,   7,  20,   5,   -2,  -15 },   // 0x6A 'j'
  {  1280,  10,  16,  10,    1,  -15 },   // 0x6B 'k'
  {  1300,   4,  16,   5,    1,  -15 },   // 0x6C 'l'
  {  1308,  14,  11,  16,    1,  -10 },   // 0x6D 'm'
  {  1328,   9,  11,  11,    1,  -10 },   // 0x6E 'n'
  {  1341,  10,  11,  10,    0,  -10 },   // 0x6F 'o'
  {  1355,  10,  15,  11,    0,  -10 },   // 0x70 'p'
  {  1374,  10,  15,  10,    0,  -10 },   // 0x71 'q'
  {  1393,   7,  11,   7,    1,  -10 },   // 0x72 'r'
  {  1403,   8,  11,   8,    0,  -10 },   // 0x73 's'
  {  1414,   6,  15,   7,    1,  -14 },   // 0x74 't'
  {  1426,   9,  11,  11,    1,  -10 },   // 0x75 'u'
  {  1439,   9,  11,  10,    1,  -10 },   // 0x76 'v'
  {  1452,  14,  11,  15,    1,  -10 },   // 0x77 'w'
  {  1472,  11,  11,  10,   -1,  -10 },   // 0x78 'x'
  {  1488,   9,  15,  10,    1,  -10 },   // 0x79 'y'
  {  1505,   9,  11,   9,    0,  -10 },   // 0x7A 'z'
  {  1518,   6,  20,   6,    0,  -15 },   // 0x7B '{'
  {  1533,   2,  20,   6,    1,  -15 },   // 0x7C '|'
  {  1538,   6,  20,   6,    0,  -15 },   // 0x7D '}'
  {  1553,  10,   5,  12,    0,   -8 } }; // 0x7E '~'

const GFXfont Lato_BoldItalic10pt7b PROGMEM = {
  (uint8_t  *)Lato_BoldItalic10pt7bBitmaps,
  (GFXglyph *)Lato_BoldItalic10pt7bGlyphs,
  0x20, 0x7E, 24 };

// Approx. 2232 bytes


#endif